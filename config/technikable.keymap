/*
 * Copyright (c) 2022 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BAS_L 0
#define NAV_L 1
#define NUM_L 2
#define SYM_L 3

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };

/ {
    chosen {
       zmk,matrix_transform = &ortho_transform;
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
	tri_layer {
	    if-layers = <NAV_L NUM_L>;
	    then-layer = <SYM_L>;
	};
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "Base";
            bindings = <
 &kp TAB    &kp Q      &kp W      &kp F       &kp P          &kp B          &kp J            &kp L          &kp U       &kp Y      &kp SEMI        &kp BKSP
 &kp BKSP   &kp A      &kp R      &kp S       &kp T          &kp D          &kp M            &kp N          &kp E       &kp I      &kp O           &kp QUOT
 &kp GRAVE  &kp Z      &kp X      &kp C       &kp D          &kp V          &kp K            &kp H          &kp COMMA   &kp DOT    &kp UNDERSCORE  &kp ESC
 			&kp LCTRL  &kp LALT   &kp SPACE      &kp Return     &kp NAV_L        &mo SPACE      &kp NUM_L    &kp NUM_L
            >;
        };

        nav_layer {
            label = "Nav";
            bindings = <
&trans	   &trans     &kp N1     &kp N2             &kp N3          &trans       &trans     &trans         &trans      &trans     &trans     &kp DEL
&trans     &kp N0     &kp N4     &mt MOD_LSFT N5    &kp N6          &trans       &trans     &kp LARW       &kp UARW    &kp DARW   &kp RARW   &trans
&trans     &trans     &kp N7  	 &kp N8      	    &kp N9          &trans   	  &trans     &kp HOME       &kp PG_DN   &kp PG_UP  &kp END    &trans
                      &trans     &trans             &trans          &trans       &trans    &trans  &trans         &trans
            >;
        };

        sym_layer {
            label = "Num";
            bindings = <
&trans     &trans   &kp N1     &kp N2      &kp N3    &kp &trans    &kp C_PREV    &trans         &trans       &trans       &trans     &trans
&trans     &kp N0     &kp N4     &kp N5      &kp N6    &kp EQUAL   &kp C_NEXT    &trans         &trans       &trans       &trans     &trans
&trans     &kp GRAVE  &kp N7     &kp N8      &kp N9    &kp BSLH    &trans        &trans         &trans       &trans       &trans     &trans
                     &trans     &kp N0      &trans    &none         &none     &kp ESC        &kp DEL      &trans
            >;
        };

        num_layer {
            label = "Sym";
            bindings = <
&trans     &kp LS(N3) &kp LS(N2) &kp LBRC  &kp RBRC   &kp PIPE     &kp ASTERISK     &kp plus    &kp minus       &trans       &trans     &trans
&trans     &kp LS(N1) &kp LS(N4) &kp LPAR  &kp RPAR   &kp LS(N5)   &kp LS(N7)  &kp EQUAL  &kp LS(FSLH) &kp FSLH     &trans     &trans
&kp BSLH   &kp TILDE  &kp LS(N1) &kp LBKT  &kp RBKT   &kp LS(BSLH) &trans     &trans      &trans       &trans       &trans     &trans
                      &trans     &kp LS(N0)      &trans          &trans       &trans      &trans  &trans         &trans
            >;
        };

    };
};

